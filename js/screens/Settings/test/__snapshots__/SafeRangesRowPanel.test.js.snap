// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SafeRangesRowPanel - renders correctly 1`] = `
<View
  style={
    Object {
      "borderWidth": 1,
      "flexDirection": "row",
    }
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "alignSelf": "center",
        "color": "white",
        "flex": 1,
        "fontSize": 30,
        "fontWeight": "bold",
        "textAlign": "center",
      }
    }
  >
    Min:
  </Text>
  <TextInput
    keyboardType="numeric"
    maxLength={5}
    onChangeText={[Function]}
    style={
      Object {
        "color": "white",
        "flex": 1,
        "fontSize": 25,
      }
    }
    value="80"
  />
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "royalblue",
        "borderWidth": 0.5,
        "flex": 1,
        "justifyContent": "center",
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "white",
          "fontSize": 23,
          "fontWeight": "bold",
        }
      }
    >
      Set
    </Text>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "darkorange",
        "borderWidth": 0.5,
        "flex": 1,
        "justifyContent": "center",
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "white",
          "fontSize": 23,
          "fontWeight": "bold",
        }
      }
    >
      Default
    </Text>
  </View>
</View>
`;
